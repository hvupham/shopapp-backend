server:
  port: 8088  
spring:

  # cho phep tham chieu vong
  main:
    allow-circular-references: true
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:mysql://localhost:3307/shopapp?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true}
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: root
    password: ${MYSQL_ROOT_PASSWORD:Abc123456789@}
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: none

    properties:
      hibernate:
      dialect: org.hibernate.dialect.MySQL8Dialect
      format_sql: true
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 100MB
  messages:
    basename: i18n/messages
    encoding: UTF-8
    default-locale: en
  #flyway
  # Đường dẫn tới thư mục chứa các script Flyway
  flyway:
    locations: classpath:/db/migration,classpath:/dev/db/migration
    #Phiên bản baseline sẽ = 1 và không thực hiện bất kỳ thay đổi nào trong DB
    baseline-on-migrate: true
    baseline-version: 0
  data:
    redis:
      #spring.data.redis.use-redis-cache
      use-redis-cache: false
      host: ${REDIS_HOST:localhost} # Default to 'localhost' if not provided
      #host: ${REDIS_HOST:ubuntu-server-01.local} # Default to 'localhost' if not provided
      port: ${REDIS_PORT:6379}      # Default to 6379 if not provided
#  kafka:
#    client:
#      dns:
#        lookup: use_dns_cache
#    bootstrap-servers: ${KAFKA_BROKER_SERVER:localhost}:${KAFKA_BROKER_PORT:9092}
#    producer:
#      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
#      #transaction-id-prefix: tx.
#      properties:
#        "[spring.json.type.mapping]": category:com.project.shopapp.models.Category
#    consumer:
#      value-deserializer: org.apache.kafka.common.serialization.ByteArrayDeserializer
  security:
    enabled: false
    oauth2:      
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}

            client-secret: ${GOOGLE_CLIENT_SECRET}
            redirect-uri: "${GOOGLE_REDIRECT_URI:http://localhost:4200/auth/google/callback}"
#            redirectUri: "localhost://{api.prefix}/login/oauth2/code/google"
            resource-server:
              opaque-token:
                introspection-uri: "https://oauth2.googleapis.com/tokeninfo"


          facebook:
            client-id: 1007654770988152
            client-secret: 5adb1d315754ac7e7e26b09d4c8b8b17
            redirect-uri: "${FACEBOOK_REDIRECT_URI:http://localhost:4200}" #sau khi user đăng nhập google thành công sẽ tự redirect đến trang này kèm code(của fb)
            auth-uri: https://www.facebook.com/v20.0/dialog/oauth
            token-uri: https://graph.facebook.com/v3.0/oauth/access_token
            user-info-uri: https://graph.facebook.com/v3.0/me?fields=id,first_name,middle_name,last_name,name,email,verified,is_verified,picture.width(250).height(250)
            scope:
              - email
              - public_profile
api:
  prefix: /api/v1
jwt:
  expiration: 2592000 #30 days = 30 * 24 * 60 * 60
  expiration-refresh-token: 51840000 #60 days = 60 * 24 * 60 * 60
  secretKey: TaqlmGv1iEDMRiFp/pHuID1+T84IABfuA0xXh4GhiUI=

logging:
  level:
    org:
      springframework.security: DEBUG

# swagger-ui custom path
springdoc:
  swagger-ui:
    path: /swagger-ui.html
  api-docs:
    path: /api-docs
  show-actuator: true

#health check
management:
  endpoint:
    health:
      show-details: always
  endpoints:
    web:
      base-path: /api/v1/actuator
      exposure:
        #include: "health"
        include: "health, info"


